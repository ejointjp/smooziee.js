@charset 'UTF-8';

@function screen-size($size: $main-breakpoint, $adjust: 0){

  @if type-of($size) == string {

    $index_minus: str-index($size, '-1');

    @if $index_minus {
      $size: str-slice($size, 1, $index_minus - 1);

      @if map-has-key($screen-size, $size){
        $size: map-get($screen-size, $size) - 1;
      }
    }

    @else {
      @if map-has-key($screen-size, $size){
        $size: map-get($screen-size, $size);
      }
    }
  }

  $return: $size + $adjust;
  //$sizeの単位が指定されている場合はそのまま出力

  @if $return <= 0 {
    @return 0;
  }

  @else if unitless($return){

    //$size単位がなくかつ0以上の場合はpxをつけて出力
    @if $return > 0 {
      @return $return * 1px;
    }
  }

  @return $return;
}


//スクリーンサイズのキーからひとつ前のキーを返す｡なしの場合0を返す
@function screen-size-before($size){
  $keys: map-keys($screen-size);
  $index: 0;

  @for $i from 0 through length($keys) - 1 {

    @if $size == nth($keys, $i + 1) {
      $index: $i;
    }
  }

  @if $index == 0 {
    @return 0;
  }

  @else {
    @return nth($keys, $index);
  }
}

//スクリーンサイズのキーから一つ後のキーを返す｡なしの場合0を返す
@function screen-size-after($size){
  $keys: map-keys($screen-size);
  $index: 0;

  @for $i from 0 through length($keys) - 2 {
    @if $size == nth($keys, $i + 1) {
      $index: $i + 2;
    }
  }

  @if $index == 0 {
    @return 0;
  }

  @else {
    @return nth($keys, $index);
  }
}
